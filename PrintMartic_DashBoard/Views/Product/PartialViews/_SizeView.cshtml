@model ProductVM

<style>
    .input-with-button {
        position: relative;
        display: inline-block;
        margin-bottom: 20px;
    }

        .input-with-button input {
            padding-right: 50px;
            width: 200px;
            height: 30px;
            box-sizing: border-box;
        }

        .input-with-button button {
            position: absolute;
            right: 0;
            top: 0;
            height: 100%;
            border: none;
            background-color: #007BFF;
            color: white;
            cursor: pointer;
            padding: 0 15px;
            font-size: 18px;
        }

            .input-with-button button:hover {
                background-color: #0056b3;
            }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

    th, td {
        padding: 10px;
        text-align: center;
    }

    td {
        width: 50%;
    }

    #styleForm{
        margin-right: 100px
    }
</style>
<div id="styleForm" >
    <div class="input-with-button">
        <input type="text" id="sizeInput" placeholder="ادخل الحجم المتاح" />
        <button type="button" id="addSizeBtn">&#8594;</button>
      
    </div>

    <!-- Display added colors in a table -->
    <table id="sizeTable" border="1" class="table">
        <thead>
            <tr>
                <th colspan="2">المقاس</th>
                
            </tr>
        </thead>
        <tbody>
            @if (Model.Sizes?.Count > 0)
            {
                @foreach (var size in Model.Sizes)
                {
                    <tr>
                        <td>
                            @size.Size
                        </td>
                        <td>
                            
                                <a href="~/ProductSize/DeleteSize/@size.Id" class="deleteBtn btn btn-light">X</a>
                            
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <!-- Hidden field to store the color list -->
    <input type="hidden" asp-for="SizeJson" id="sizes" />
</div>
    <script>

        // Array to store selected colors
        let selectedSizes = [];

        // Get references to the button, table body, and hidden input field
        const addSizeBtn = document.getElementById('addSizeBtn');
        const sizeInput = document.getElementById('sizeInput');
        const sizeTable = document.querySelector('#sizeTable tbody');
        const hiddenSizeField = document.getElementById('sizes');

        // Function to add selected color to the table and the list
        addSizeBtn.addEventListener('click', function (e) {
            e.preventDefault(); // Prevent form submission if button is inside the form

            const selectedSize = sizeInput.value;

            // Add the size to the array
            selectedSizes.push(selectedSize);

            // Create a new row for the table
            const newRow = document.createElement('tr');

            // Create the size cell
            const sizeCell = document.createElement('td');
            sizeCell.textContent = selectedSize

            // Append cells to the row
            newRow.appendChild(sizeCell);

            // Append the row to the table
            sizeTable.appendChild(newRow);
            sizeInput.value = '';
            // Update the hidden input with the list of colors as JSON
            hiddenSizeField.value = JSON.stringify(selectedSizes);


            const deleteCell = document.createElement('td');
            const deleteBtn = document.createElement('button');
            deleteBtn.textContent = 'X';
            deleteBtn.className = 'deleteBtn btn btn-light';
            deleteCell.appendChild(deleteBtn);

            // Append cells to the row
            newRow.appendChild(sizeCell);
            // newRow.appendChild(hexCell);
            newRow.appendChild(deleteCell);

            // Append the row to the table
            sizeTable.appendChild(newRow);

            // Update the hidden input with the list of colors as JSON
            hiddenSizeField.value = JSON.stringify(selectedSizes);

            // Attach event listener for the delete button
            deleteBtn.addEventListener('click', function () {
                const rowIndex = Array.from(sizeTable.children).indexOf(newRow);

                // Remove the color from the array
                selectedSizes.splice(rowIndex, 1);

                // Update the hidden input with the updated list of colors as JSON
                hiddenSizeField.value = JSON.stringify(selectedSizes);

                // Remove the row from the table
                newRow.remove();
            });

        });
    </script>

