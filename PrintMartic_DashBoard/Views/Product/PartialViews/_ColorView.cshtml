@model ProductVM
<style>
    .input-with-button {
        position: relative;
        display: inline-block;
        margin-bottom: 20px;
    }

        .input-with-button input {
            padding-right: 50px;
            width: 100%;
            height: 30px;
            box-sizing: border-box;
        }

        .input-with-button button {
            position: absolute;
            right: 0;
            top: 0;
            height: 100%;
            border: none;
            background-color: #007BFF;
            color: white;
            cursor: pointer;
            padding: 0 15px;
            font-size: 18px;
        }

            .input-with-button button:hover {
                background-color: #0056b3;
            }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

    th, td {
        padding: 10px;
        text-align: center;
    }

    td {
        width: 50%;
    }

   /*  .deleteBtn {
        background-color: red;
        color: white;
        border: none;
        padding: 5px 10px;
        font-size: 16px;
        cursor: pointer;
    }

        .deleteBtn:hover {
            background-color: darkred;
        } */
</style>


<div id="Inputcolor" >
    <!-- Color picker -->
    <div class="input-with-button">
        <input type="color" id="colorPicker" />
        <button type="button" id="addColorBtn">&#8594;</button>
    </div>

    <!-- Display added colors in a table -->
    <table id="colorTable" border="1" class="table">
        <thead>
            <tr>
                <th colspan="2">اللون</th>
              
            </tr>
        </thead>
        <tbody>
            @if (Model.Colors?.Count > 0)
            {
                @foreach (var color in Model.Colors)
                {
                    <tr>
                        <td style="background-color: @color.HexCode"></td>
                       
                        <td>
                            <a href="~/ProductColor/DeleteColor/@color.Id" class="deleteBtn btn btn-light">X</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <!-- Hidden field to store the color list -->
    <input type="hidden" asp-for="ColorJson" id="colors" />
</div>

    <script>
      

        // Array to store selected colors
        let selectedColors = [];

        // Get references to the button, table body, and hidden input field
        const addColorBtn = document.getElementById('addColorBtn');
        const colorPicker = document.getElementById('colorPicker');
        const colorTable = document.querySelector('#colorTable tbody');
        const hiddenColorField = document.getElementById('colors');

        // Function to add selected color to the table and the list
        addColorBtn.addEventListener('click', function (e) {
            e.preventDefault(); // Prevent form submission if button is inside the form

            const selectedColor = colorPicker.value;

            // Add the color to the array
            selectedColors.push(selectedColor);

            // Create a new row for the table
            const newRow = document.createElement('tr');

            // Create the color cell
            const colorCell = document.createElement('td');
            colorCell.style.backgroundColor = selectedColor;
            colorCell.style.width = '100px';

            // Create the hex code cell
            // const hexCell = document.createElement('td');
            // hexCell.textContent = selectedColor;

            // Create the delete button cell
            const deleteCell = document.createElement('td');
            const deleteBtn = document.createElement('button');
            deleteBtn.textContent = 'X';
            deleteBtn.className = 'deleteBtn btn btn-light';
            deleteCell.appendChild(deleteBtn);

            // Append cells to the row
            newRow.appendChild(colorCell);
            // newRow.appendChild(hexCell);
            newRow.appendChild(deleteCell);

            // Append the row to the table
            colorTable.appendChild(newRow);

            // Update the hidden input with the list of colors as JSON
            hiddenColorField.value = JSON.stringify(selectedColors);

            // Attach event listener for the delete button
            deleteBtn.addEventListener('click', function () {
                const rowIndex = Array.from(colorTable.children).indexOf(newRow);

                // Remove the color from the array
                selectedColors.splice(rowIndex, 1);

                // Update the hidden input with the updated list of colors as JSON
                hiddenColorField.value = JSON.stringify(selectedColors);

                // Remove the row from the table
                newRow.remove();
            });
        });
    </script>
